diff --git a/dist/index.es.js b/dist/index.es.js
index b53f2bd2963c8b1b63374fd28ffadac2099a6063..a0e9b525e7ec3a363682a2c2a193edc499a2a36c 100644
--- a/dist/index.es.js
+++ b/dist/index.es.js
@@ -31,7 +31,7 @@ var __objRest = (source, exclude) => {
   return target2;
 };
 import * as React from "react";
-import React__default, { createContext as createContext$1, useContext, useRef, useState, useEffect, forwardRef, useLayoutEffect, useCallback, createElement, PureComponent, useId as useId$1, useMemo, Fragment as Fragment$1, memo, useReducer, Children, cloneElement } from "react";
+import React__default, { createContext as createContext$1, useContext, useRef, useState, useEffect, forwardRef, useLayoutEffect, useCallback, createElement, PureComponent, useMemo, Fragment as Fragment$1, memo, useReducer, Children, cloneElement } from "react";
 import { parse as parse$2, TypeInfo, visit as visit$1, print as print$1, getNamedType, isLeafType as isLeafType$1, Kind as Kind$1, visitWithTypeInfo, isCompositeType, isScalarType as isScalarType$1, isObjectType as isObjectType$1, isInterfaceType as isInterfaceType$1, isUnionType as isUnionType$1, isEnumType as isEnumType$1, isInputObjectType as isInputObjectType$1, isOutputType, isInputType, TypeNameMetaFieldDef as TypeNameMetaFieldDef$1, SchemaMetaFieldDef as SchemaMetaFieldDef$1, TypeMetaFieldDef as TypeMetaFieldDef$1, GraphQLEnumType as GraphQLEnumType$1, GraphQLBoolean as GraphQLBoolean$1, isAbstractType as isAbstractType$1, assertAbstractType, doTypesOverlap, DirectiveLocation as DirectiveLocation$1, BREAK as BREAK$1, isListType as isListType$1, isNonNullType as isNonNullType$1, GraphQLInterfaceType as GraphQLInterfaceType$1, GraphQLObjectType as GraphQLObjectType$1, GraphQLInputObjectType as GraphQLInputObjectType$1, getNullableType, GraphQLList as GraphQLList$1, typeFromAST, GraphQLFloat as GraphQLFloat$1, astFromValue as astFromValue$1, isSchema, buildClientSchema, validateSchema, getIntrospectionQuery, isNamedType, isType as isType$1 } from "graphql";
 import ReactDOM, { createPortal } from "react-dom";
 var root = /* @__PURE__ */ (() => '.graphiql-container *{box-sizing:border-box}.graphiql-container,.CodeMirror-info,.CodeMirror-lint-tooltip,reach-portal{--color-primary: 320, 95%, 43%;--color-secondary: 242, 51%, 61%;--color-tertiary: 188, 100%, 36%;--color-info: 208, 100%, 46%;--color-success: 158, 60%, 42%;--color-warning: 36, 100%, 41%;--color-error: 13, 93%, 58%;--color-neutral: 219, 28%, 32%;--color-base: 219, 28%, 100%;--alpha-secondary: .76;--alpha-tertiary: .5;--alpha-background-heavy: .15;--alpha-background-medium: .1;--alpha-background-light: .07;--font-family: "Roboto", sans-serif;--font-family-mono: "Fira Code", monospace;--font-size-hint:.75rem;--font-size-inline-code:.8125rem;--font-size-body:.9375rem;--font-size-h4:1.125rem;--font-size-h3:1.375rem;--font-size-h2:1.8125rem;--font-weight-regular: 400;--font-weight-medium: 500;--line-height: 1.5;--px-2: 2px;--px-4: 4px;--px-6: 6px;--px-8: 8px;--px-10: 10px;--px-12: 12px;--px-16: 16px;--px-20: 20px;--px-24: 24px;--border-radius-2: 2px;--border-radius-4: 4px;--border-radius-8: 8px;--border-radius-12: 12px;--popover-box-shadow: 0px 6px 20px rgba(59, 76, 106, .13), 0px 1.34018px 4.46726px rgba(59, 76, 106, .0774939), 0px .399006px 1.33002px rgba(59, 76, 106, .0525061);--popover-border: none;--sidebar-width: 60px;--toolbar-width: 40px;--session-header-height: 51px}@media (prefers-color-scheme: dark){body:not(.graphiql-light) .graphiql-container,body:not(.graphiql-light) .CodeMirror-info,body:not(.graphiql-light) .CodeMirror-lint-tooltip,body:not(.graphiql-light) reach-portal{--color-primary: 338, 100%, 67%;--color-secondary: 243, 100%, 77%;--color-tertiary: 188, 100%, 44%;--color-info: 208, 100%, 72%;--color-success: 158, 100%, 42%;--color-warning: 30, 100%, 80%;--color-error: 13, 100%, 58%;--color-neutral: 219, 29%, 78%;--color-base: 219, 29%, 18%;--popover-box-shadow: none;--popover-border: 1px solid hsl(var(--color-neutral))}}body.graphiql-dark .graphiql-container,body.graphiql-dark .CodeMirror-info,body.graphiql-dark .CodeMirror-lint-tooltip,body.graphiql-dark reach-portal{--color-primary: 338, 100%, 67%;--color-secondary: 243, 100%, 77%;--color-tertiary: 188, 100%, 44%;--color-info: 208, 100%, 72%;--color-success: 158, 100%, 42%;--color-warning: 30, 100%, 80%;--color-error: 13, 100%, 58%;--color-neutral: 219, 29%, 78%;--color-base: 219, 29%, 18%;--popover-box-shadow: none;--popover-border: 1px solid hsl(var(--color-neutral))}:is(.graphiql-container,.CodeMirror-info,.CodeMirror-lint-tooltip,reach-portal),:is(.graphiql-container,.CodeMirror-info,.CodeMirror-lint-tooltip,reach-portal):is(button){color:hsla(var(--color-neutral),1);font-family:var(--font-family);font-size:var(--font-size-body);font-weight:var(----font-weight-regular);line-height:var(--line-height)}:is(.graphiql-container,.CodeMirror-info,.CodeMirror-lint-tooltip,reach-portal) input{color:hsla(var(--color-neutral),1);font-family:var(--font-family);font-size:var(--font-size-caption)}:is(.graphiql-container,.CodeMirror-info,.CodeMirror-lint-tooltip,reach-portal) input::placeholder{color:hsla(var(--color-neutral),var(--alpha-secondary))}:is(.graphiql-container,.CodeMirror-info,.CodeMirror-lint-tooltip,reach-portal) a{color:hsl(var(--color-primary))}:is(.graphiql-container,.CodeMirror-info,.CodeMirror-lint-tooltip,reach-portal) a:focus{outline:hsl(var(--color-primary)) auto 1px}\n')();
@@ -9853,10 +9853,6 @@ function genId() {
 __name(genId, "genId");
 function useId(providedId) {
   var _ref2;
-  if (typeof useId$1 === "function") {
-    var _id = useId$1(providedId);
-    return providedId != null ? providedId : _id;
-  }
   var initialId = providedId != null ? providedId : serverHandoffComplete ? genId() : null;
   var _React$useState = useState(initialId), id2 = _React$useState[0], setId = _React$useState[1];
   useIsomorphicLayoutEffect(function() {